<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<configuration scan="true" scanPeriod="60 seconds">

  <!-- Console Appender: stdout - Messages are inherited from the root, 
       which is the application log level. Filtering is done manually at
	   this appender level, and access is not available in the UI.
	   
	   where they are filtered depending on the 
	   level value of the filtering level below. -->
  <appender class="ch.qos.logback.core.ConsoleAppender" name="stdout">
    <encoder>
      <pattern>%d{ISO8601} [%thread] %-5level - %m%n</pattern>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>ERROR</level>
    </filter>
  </appender>
  
  <!-- RollingFile Appender: RollingFile-1 - Messages are inherited from the root,
       which is the application log level.  No filtering is done at this appender 
	   level. The root logging level is set by the user in the logging configuration 
	   dialog. -->
  <appender class="ch.qos.logback.core.rolling.RollingFileAppender" name="RollingFile-1">
    <!--See also http://logback.qos.ch/manual/appenders.html#RollingFileAppender-->
    <File>${fmgui.logs.dir}/fmgui.log</File>
    <encoder>
      <pattern>%d{ISO8601} [%thread] %-5level - %m%n</pattern>
    </encoder>
    <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
      <maxIndex>10</maxIndex>
      <FileNamePattern>${fmgui.logs.dir}/fmgui.log.%i</FileNamePattern>
    </rollingPolicy>
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <MaxFileSize>5MB</MaxFileSize>
    </triggeringPolicy>
  </appender>
  
  <!-- RollingFile Appender: HibernateSql - Messages are inherited from the root,
       which is the application log level.  No filtering is done at this appender 
	   level. The root logging level is set by the user in the logging configuration 
	   dialog. -->
  <appender class="ch.qos.logback.core.rolling.RollingFileAppender" name="HibernateSql">
    <!--See also http://logback.qos.ch/manual/appenders.html#RollingFileAppender-->
    <File>${fmgui.logs.dir}/hibernate.log</File>
    <encoder>
      <pattern>%d{ISO8601} [%thread] %-5level - %m%n</pattern>
    </encoder>
    <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
      <maxIndex>5</maxIndex>
      <FileNamePattern>${fmgui.logs.dir}/hibernate.log.%i</FileNamePattern>
    </rollingPolicy>
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <MaxFileSize>20MB</MaxFileSize>
    </triggeringPolicy>
  </appender>
  
  <!-- RollingFile Appender: DbMgr - Messages are inherited from the root,
       which is the application log level.  Filtering is done manually at this appender 
	   level, and access is not available in the UI. The root logging level must be set
       directly in this file. -->
  <appender class="ch.qos.logback.core.rolling.RollingFileAppender" name="DbMgr">
    <!--See also http://logback.qos.ch/manual/appenders.html#RollingFileAppender-->
    <File>${fmgui.logs.dir}/opadbmgr.log</File>
    <encoder>
      <pattern>%d{ISO8601} [%thread] %-5level - %m%n</pattern>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>OFF</level>
    </filter>
    <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
      <maxIndex>10</maxIndex>
      <FileNamePattern>${fmgui.logs.dir}/opadbmgr.log.%i</FileNamePattern>
    </rollingPolicy>
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <MaxFileSize>5MB</MaxFileSize>
    </triggeringPolicy>
  </appender>
  
  <!-- RollingFile Appender: FecDriver - Messages are inherited from the root,
       which is the application log level.  Filtering is done manually at this appender 
	   level, but access is not available in the UI. The root logging level must be set
       directly in this file. -->
  <appender class="ch.qos.logback.core.rolling.RollingFileAppender" name="FecDriver">
    <!--See also http://logback.qos.ch/manual/appenders.html#RollingFileAppender-->
    <File>${fmgui.logs.dir}/opafecdriver.log</File>
    <encoder>
      <pattern>%d{ISO8601} [%thread] %-5level - %m%n</pattern>
    </encoder>
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>OFF</level>
    </filter>
    <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
      <maxIndex>10</maxIndex>
      <FileNamePattern>${fmgui.logs.dir}/opafecdriver.log.%i</FileNamePattern>
    </rollingPolicy>
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <MaxFileSize>5MB</MaxFileSize>
    </triggeringPolicy>		
  </appender>
  
  <!-- Set the appender level for the datamanager logger to inherit level from the root --> 
  <logger level="INHERITED" name="com.intel.stl.datamanager">
    <appender-ref ref="DbMgr"/>
  </logger>
  
  <!-- Set the appender level for the dbengine logger to inherit level from the root --> 	
  <logger level="INHERITED" name="com.intel.stl.dbengine">
    <appender-ref ref="DbMgr"/>
  </logger>
  
  <!-- Set the appender level for the fecdriver logger to inherit level from the root --> 	  
  <logger level="INHERITED" name="com.intel.stl.fecdriver">
    <appender-ref ref="FecDriver"/>
  </logger>
  
  <!-- Set the appender level for the hibernate.type logger to inherit level from the root -->   
  <logger additivity="false" level="OFF" name="org.hibernate.type">
    <appender-ref ref="HibernateSql"/>
  </logger>
  
  <!-- Set the appender level for the hibernate.SQL logger to inherit level from the root -->   
  <logger additivity="false" level="OFF" name="org.hibernate.SQL">
    <appender-ref ref="HibernateSql"/>
  </logger>
  
  <logger level="OFF" name="org.hibernate">
  </logger>
  
  <!-- Set the root logger level and make the console and rolling file appenders inherit its level -->   
  <root level="INFO">
    <appender-ref ref="stdout"/>
    <appender-ref ref="RollingFile-1"/>
  </root>
</configuration>